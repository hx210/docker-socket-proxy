name: Build Docker Image

on:
  repository_dispatch:
    types: [docker]
  workflow_dispatch:
  push:
    branches:
      - "main"
    tags:
      - v*
    paths:
      - "**/*docker*"
  schedule:
    - cron: 0 15 */14 * *
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: docker-socket-proxy
  ARCH: linux/amd64,linux/arm64

jobs:
  on-success:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login To DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Multiarch Image
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ env.ARCH }}
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: TG_Bot推送
        if: failure()
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_CHAT_ID: ${{ secrets.TG_USER_CHAT_ID }}
        run: |
          MESSAGE="Error:${GITHUB_WORKFLOW}-${GITHUB_JOB}-${GITHUB_RUN_NUMBER}"
          TG_API_URL="https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage"
          curl -s -X POST ${TG_API_URL} -d chat_id=${TG_USER_CHAT_ID} -d text="$MESSAGE" >/dev/null

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
